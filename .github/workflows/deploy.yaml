# force deployment
name: Build & Deploy

on:
  pull_request:
    branches:
      - stage

env:
  AWS_REGION: sa-east-1
  WEB_ECR_REPOSITORY: 060454264788.dkr.ecr.sa-east-1.amazonaws.com/v10-eng-dev-frontend-node
  WEB_ECS_SERVICE: frontend-node
  WEB_ECS_CLUSTER: v10-eng-cluster
  WEB_ECS_TASK_DEFINITION: v10-eng-dev-frontend-node
  WEB_CONTAINER_NAME: frontend-node
  NODE_ENV: test

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 16.x

      - name: Grant Permissions
        run: chmod +x build-web.sh

      - name: Install Dependencies
        run: yarn install

      - name: Build Web
        run: ./build-web.sh

      - name: Build Web
        run: docker build -t viagem10-web -f apps/web/Dockerfile .

      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@master
      #   with:
      #     role-to-assume: arn:aws:iam::060454264788:role/github-actions
      #     aws-region: sa-east-1

      # - name: Login to Amazon ECR
      #   id: login-ecr
      #   uses: aws-actions/amazon-ecr-login@v1

      # - name: Build, tag, and push web docker image to Amazon ECR
      #   env:
      #     WEB_ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #     WEB_ECR_REPOSITORY: v10-eng-dev-frontend-node
      #     WEB_IMAGE_TAG: ${{ github.sha }}
      #   run: |
      #     docker build -t $WEB_ECR_REGISTRY/$WEB_ECR_REPOSITORY:$WEB_IMAGE_TAG -f apps/web/Dockerfile .
      #     docker push $WEB_ECR_REGISTRY/$WEB_ECR_REPOSITORY:$WEB_IMAGE_TAG -f apps/web/Dockerfile .
      #     docker build -t $WEB_ECR_REGISTRY/$WEB_ECR_REPOSITORY:latest -f apps/web/Dockerfile .
      #     docker push $WEB_ECR_REGISTRY/$WEB_ECR_REPOSITORY:latest -f apps/web/Dockerfile .

      # - name: Fill in the new image ID in the Amazon ECS task definition
      #   id: task-def
      #   uses: aws-actions/amazon-ecs-render-task-definition@97587c9d45a4930bf0e3da8dd2feb2a463cf4a3a
      #   with:
      #     task-definition: ecs-web-task-definition.json
      #     container-name: ${{ env.WEB_CONTAINER_NAME }}
      #     image: ${{ env.WEB_ECR_REPOSITORY }}:${{ github.sha }}

      # - name: Deploy Amazon ECS task definition
      #   uses: aws-actions/amazon-ecs-deploy-task-definition@v1.4.10
      #   with:
      #     task-definition: ${{ steps.task-def.outputs.task-definition }}
      #     service: ${{ env.WEB_ECS_SERVICE }}
      #     cluster: ${{ env.WEB_ECS_CLUSTER }}
      #     wait-for-service-stability: true
