name: Deploy backend to Amazon ECS

on:
  push:
    branches:
      - development

env:
  AWS_REGION: sa-east-1
  ECR_REPOSITORY: 060454264788.dkr.ecr.sa-east-1.amazonaws.com/v10-eng-dev-backend-ts
  ECS_SERVICE: backend-ts
  ECS_CLUSTER: v10-eng-cluster
  ECS_TASK_DEFINITION: v10-eng-dev-backend-ts
  CONTAINER_NAME: backend-ts
  DATABASE_URL: postgresql://postgres:postgres@localhost:5432/postgres
  NODE_ENV: test

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Start DB
        run: docker run --name db -p 5432:5432 -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=postgres -d postgres:14-alpine

      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      - name: Prisma Migrate
        run: yarn prisma migrate dev --schema=libs/server/infra/database/prisma/schema.prisma

      - name: Grant Permissions build-server.sh
        run: chmod +x build-server.sh

      - name: Build Server
        run: ./build-server.sh

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: arn:aws:iam::${{ secrets.DEV_ACCOUNT_ID }}:role/github-actions
          aws-region: sa-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: v10-eng-dev-backend-ts
          IMAGE_TAG: ${{ github.sha }}
          ACCOUNT_ID: ${{ secrets.DEV_ACCOUNT_ID }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f apps/server/Dockerfile .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG 
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest -f apps/server/Dockerfile .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ecs-backend-task-definition.json
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ env.ECR_REPOSITORY }}:${{ github.sha }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1.4.10
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true
